Domingo:
0.- Obtener transacciones en bloques de 5 cada minuto

Lunes
1.- put Crear Vehículo
2.- update Actualizar Vehículo
3.- delete Eliminar vehículo


Martes:
4.- obtener lecturas desde orcu
	tipo get:
	endpoint: /lecturas_tls
	header:  token => "el token del login"
5.- obtener lectura especifica desde orcu
	tipo get:
	endpoint: /lecturas_tls/:reception_unique_id
	header:  token => "el token del login"
6.- verificar existencia de factura en master informix
	tipo get:
	endpoint: /facturas/:fecha/:factura/:serie
	header:  token => "el token del login"
7.- actualiza lectura especifica agregando el movimiento correspondiente y posteriormente agrega el ci_movimiento a la lectura y modifica su estatus a 1 (procesada)
	tipo patch:
	endpoint: /lecturas_tls
	header:  token => "el token del login"
	body:
		{
		    "reception_unique_id": "si Es Lectura De TLS agregar reception_unique_id Sino dejar en blanco",
		    "start_delivery_timestamp": "fecha y hora de inicio de lectura de TLS",
		    "end_delivery_timestamp": "fecha y hora de fin de lectura de TLS",
		    "start_volume": "existencia en litros antes de la carga",
		    "supervisor": "numeroEmpleadoFragua",
		    "sello": "selloDelCamion",
		    "referencia": "numeroFactura",
		    "litros_esp": "litrosEnFactura",
		    "litros_real": "litrosTotalesLectura",
		    "costo_esp": "importeFactura",
		    "costo_real": "precioUnitarioFactura*litrosTotalesLectura",
		    "serie": "serie de factura",
		    "ppv": "precio unitario en factura",
		    "iva": "importeIvaFactura",
		    "ieps": "importeIepsFactura"
		}
8.- eliminar una lectura local
	tipo del:
	header:  token => "el token del login"
	endpoint: /lecturas_tls
	body:
		{
		    "reception_unique_id": "200000011"
		}


Miércoles:
9.- get obtener pase especifico
	tipo comando: get
	header: token=>"token del login"
	endpoint: /pases
	body:
		Búsqueda por camion viaje y chofer:   {"pase": "","viaje": "10002", "camion": "TagVehiculo", "chofer": "1002"}
		Búsqueda por número de pase: {"pase": "30001","viaje": "", "camion": "", "chofer": ""}

10.- patch reasignar pase
	header: token=>"token del login"
	endpoint: /pases
	body:
	{"pase": "30001","estatus": "T", "camion": "1000", "mean_contingencia": "8888", "observaciones": "Razon por la cual se esta reasignando como contingencia el pase","supervisor": "numero de empleado del supervisor que autoriza"}	
11.- patch reabrir pase
	header: token=>"token del login"
	endpoint: /pases
	body:
	{"pase": "30001","estatus": "R", "camion": "1000", "mean_contingencia": "1000", "observaciones": "Razon por la cual se esta reasignando como contingencia el pase","supervisor": "numero de empleado del supervisor que autoriza"}	
12.- get listar tags de contingencia

Jueves:
13.- put guardar jarreo en transporter y trate
14.- put registrar devolución de jarreo en transporter y trate
15.- put registrar movimiento manual en transporter y trate

Viernes:
16.- get listar tags de despachador
17.- put abrir turno
	crear turno en orcu
	activar tags seleccionados en orcu
	obtener y registrar totalizadores en transporter
	obtener y registrar lectura de tanques en transporter
18.- put cerrar turno
	cambiar estatus de turno en orcu
	desactivar tags seleccionados en orcu
	obtener y registrar totalizadores en transporter
	obtener y registrar lectura de tanques en transporter
	registrar movimientos en mariadb
	registrar movimientos en trate

Sábado:
19.- get listar usuarios
		tipo comando: get
		header: token=>"token del login"
		endpoint: /usuarios
		
20.- put crear usuario
		tipo comando: put
		header: token=>"token del login"
		endpoint: /usuarios
		body:
		{
        "usuario": "cgomez",
        "nombre": "Carlos Gomez",
        "estatus": 1,
        "nivel": 1,
        "password": "ortech"
        }
	
21.- update modificar usuario
		tipo comando: patch
		header: token=>"token del login"
		endpoint: /usuarios
		body:
		{
        "idusuarios": 3,
        "usuario": "cgomez",
        "nombre": "Carlos Gomez",
        "estatus": 1,
        "nivel": 1,
        "password": "ortech"
        }

22.- get obtener usuario por id
		tipo comando: get
		header: token=>"token del login"
		endpoint: /usuarios/:idusuarios